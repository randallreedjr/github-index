require 'Pathname'

class GithubIndex

  def initialize
    read_config
    #@base_dir = "/Users/rcrjr/Flatiron/Curriculum/"
    #@base_repo = "https://github.com/randallreedjr/"

  end

  def generate_index
    write_header
    puts @base_dir
    puts @base_repo
    puts "<ul>"
    process_directory(@base_dir)
    puts "</ul>"
    write_footer
  end

  private
  def read_config
    file = File.new("config","r")
    @base_dir = File.join(file.gets.sub("repo base dir:","").strip,"/")
    @base_repo = "https://github.com/" << file.gets.sub("github user:","").strip
    file.close
  end

  def write_header
    puts "<!doctype html>"
    puts "<html>"
    puts "  <head><title>Randall's Github Index</title></head>"
    puts "  <body>"

  end

  def process_directory(current_directory)
    #if directory has .git directory, 
    contents = Dir.entries(current_directory).slice(2..-1)
    path = Pathname.new(current_directory)
    if not contents.include?(".git")
      puts "<li>#{path.basename}"
      contents.each do |content|
        if File.directory?("#{current_directory}/#{content}/")
          puts "<ul>"
          process_directory("#{current_directory}/#{content}/")
          puts "</ul>"
        end
      end
      
    else
      remote = find_git_remote("#{current_directory}/.git/config")
      if remote.empty?
        puts "<li>#{path.basename}"
      else
        puts "<li><a href=\"#{remote}\">#{path.basename}</a>"
      end
      
    end
      



    # weeks.each do |week|
    #   puts "<li>#{week}"
    #   puts "<ul>"
    #   days = Dir.entries("#{base_dir}/#{week}").slice(2..-1)
    #   days.each do |day|
    #     puts "<li>#{day}"
    #     repos = Dir.entries("#{base_dir}/#{week}/#{day}").slice(2..-1)
    #     puts "<ul>"
    #     repos.each do |repo|
    #       if Dir.entries("#{base_dir}/#{week}/#{day}/#{repo}").include?(".git")
    #         puts "<li><a href = #{base_repo}#{repo}>#{repo}</a>" 
    #       else
    #         puts "<li>#{repo}"
    #       end
    #     end
    #     puts "</ul>"
    #   end
    #   puts "</ul>"
    # end

  end

  def write_footer

    footer = <<-FOOTER
      <h6>Generated by <a href="https://github.com/randallreedjr">github-index</a></h6>
    FOOTER
    puts footer
    puts "  </body>"
    puts "</html>"
  end

  def find_git_remote(filename)
    remote = ""
    file = File.new(filename, "r")
    while (line = file.gets)
      if line.start_with?("[remote")
        remote = file.gets.gsub("url = git@github.com:", "https://github.com/")
        break
      end
    end
    file.close
    return remote
  end
end

index = GithubIndex.new
index.generate_index